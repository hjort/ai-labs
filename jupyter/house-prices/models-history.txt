		  Linear Regression => 85.94 [  142 ms]
                              Ridge => 85.95 [   73 ms]
                         Ridge (.5) => 85.95 [   52 ms]
                              Lasso => -0.30 [   78 ms]
                         Lasso (.1) => 66.33 [   56 ms]
                        Elastic Net => -0.32 [   37 ms]
      Least Angle Regression (LARS) => 1.17 [   36 ms]
                    LARS Lasso (.1) => -0.15 [   49 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   56 ms]
                     Bayesian Ridge => 86.31 [  248 ms]
Automatic Relevance Determination (ARD) => 85.61 [35781 ms]

                  Linear Regression => 85.94 [  125 ms]
                              Ridge => 85.95 [   44 ms]
                         Ridge (.5) => 85.95 [   46 ms]
                         Lasso (.1) => 66.33 [   49 ms]
                         Lasso (10) => -0.30 [   36 ms]
                        Elastic Net => -0.32 [   46 ms]
      Least Angle Regression (LARS) => 1.17 [   50 ms]
                    LARS Lasso (.1) => -0.15 [   48 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   54 ms]
                     Bayesian Ridge => 86.31 [  314 ms]

                  Linear Regression => 85.94 [  119 ms]
                              Ridge => 85.95 [   46 ms]
                         Ridge (.1) => 85.94 [   45 ms]
                         Ridge (.5) => 85.95 [   49 ms]
                         Lasso (.1) => 66.33 [   67 ms]
                         Lasso (.5) => -0.32 [   39 ms]
                   Elastic Net (.1) => 77.83 [   59 ms]
                   Elastic Net (.5) => 6.84 [   34 ms]
    Least Angle Regression (LARS) 1 => 1.17 [   24 ms]
    Least Angle Regression (LARS) 5 => 48.14 [   30 ms]
                    LARS Lasso (.1) => -0.15 [   28 ms]
                    LARS Lasso (.5) => -0.15 [   22 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   31 ms]
                     Bayesian Ridge => 86.31 [  142 ms]
Automatic Relevance Determination (ARD) => 85.61 [34362 ms]
  Stochastic Gradient Descent (SGD) => -23530307167088740339722424942592.00 [   23 ms]

                  Linear Regression => 85.94 [   69 ms]
                              Ridge => 85.95 [   30 ms]
                         Ridge (.1) => 85.94 [   41 ms]
                         Ridge (.5) => 85.95 [   41 ms]
                        Ridge (.75) => 85.95 [   40 ms]
                         Lasso (.1) => 66.33 [   63 ms]
                        Lasso (.05) => 78.08 [   65 ms]
                   Elastic Net (.1) => 77.83 [   53 ms]
                  Elastic Net (.05) => 82.68 [   43 ms]
    Least Angle Regression (LARS) 1 => 1.17 [   50 ms]
    Least Angle Regression (LARS) 5 => 48.14 [   61 ms]
   Least Angle Regression (LARS) 10 => 71.87 [   71 ms]
                    LARS Lasso (.1) => -0.15 [   41 ms]
                    LARS Lasso (.5) => -0.15 [  121 ms]
                    LARS Lasso (1.) => -0.15 [   94 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   49 ms]
                     Bayesian Ridge => 86.31 [  197 ms]
Automatic Relevance Determination (ARD) => 85.61 [33770 ms]
  Stochastic Gradient Descent (SGD) => -85414365608848453041533281632256.00 [   33 ms]

                  Linear Regression => 85.94 [   87 ms]
                         Ridge (.5) => 85.95 [   33 ms]
                         Lasso (.1) => 66.33 [   27 ms]
                        Lasso (.05) => 78.08 [   36 ms]
                        Lasso (.01) => 85.91 [   73 ms]
                   Elastic Net (.1) => 77.83 [   62 ms]
                  Elastic Net (.05) => 82.68 [   44 ms]
                  Elastic Net (.01) => 86.44 [   69 ms]
    Least Angle Regression (LARS) 1 => 1.17 [   33 ms]
    Least Angle Regression (LARS) 5 => 48.14 [   62 ms]
   Least Angle Regression (LARS) 10 => 71.87 [   76 ms]
   Least Angle Regression (LARS) 50 => 84.96 [  144 ms]
ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 75 iterations, i.e. alpha=2.166e-06, with an active set of 73 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  Least Angle Regression (LARS) 100 => 82.10 [  283 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   56 ms]
                     Bayesian Ridge => 86.31 [  259 ms]
Automatic Relevance Determination (ARD) => 85.61 [33276 ms]

                  Linear Regression => 85.94 [  150 ms]
                         Ridge (.5) => 85.95 [   45 ms]
                        Lasso (.01) => 85.91 [  105 ms]
                       Lasso (.005) => 86.41 [  109 ms]
                  Elastic Net (.01) => 86.44 [   71 ms]
                 Elastic Net (.005) => 86.43 [  110 ms]
   Least Angle Regression (LARS) 50 => 84.96 [  207 ms]
  Least Angle Regression (LARS) 100 => 83.75 [  319 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   54 ms]
                     Bayesian Ridge => 86.31 [  199 ms]
Automatic Relevance Determination (ARD) => 85.61 [36253 ms]

                  Linear Regression => 85.94 [  151 ms]
                         Ridge (.5) => 85.95 [   63 ms]
                       Lasso (.005) => 86.41 [  188 ms]
                       Lasso (.001) => 86.19 [  248 ms]
                 Elastic Net (.005) => 86.43 [  116 ms]
                 Elastic Net (.001) => 86.09 [  385 ms]
   Least Angle Regression (LARS) 50 => 84.96 [  231 ms]
   Least Angle Regression (LARS) 75 => 83.75 [  312 ms]
  Least Angle Regression (LARS) 100 => 83.75 [  314 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   53 ms]
                     Bayesian Ridge => 86.31 [  201 ms]
Automatic Relevance Determination (ARD) => 85.61 [36497 ms]
      Passive Aggressive Algorithms => -30137.96 [   24 ms]

FutureWarning: max_iter and tol parameters have been added in <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'> in 0.19. If both are left unset, they default to max_iter=5 and tol=None. If tol is not None, max_iter defaults to max_iter=1000. From 0.21, default max_iter will be 1000, and default tol will be 1e-3.
  "and default tol will be 1e-3." % type(self), FutureWarning)

                          Theil-Sen => -515.80 [266067 ms]
                              Huber => -516.14 [  830 ms]
                             RANSAC => 86.12 [ 2449 ms]
                            Bagging => 86.51 [ 1005 ms]
                     Random Forests => 87.67 [  867 ms]
         Extremely Randomized Trees => 84.53 [  726 ms]
                           AdaBoost => 79.94 [  453 ms]
                  Gradient Boosting => 67.10 [  225 ms]
                K-Nearest Neighbors => 27.51 [  121 ms]
                      Decision Tree => 75.27 [  139 ms]
      Support Vector Machines (SVR) => 25.75 [ 1138 ms]

                  Linear Regression => 85.94 [   95 ms]
                         Ridge (.5) => 85.95 [   36 ms]
                       Lasso (.005) => 86.41 [  125 ms]
                 Elastic Net (.005) => 86.43 [  129 ms]
   Least Angle Regression (LARS) 50 => 84.96 [  234 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  320 ms]
   Least Angle Regression (LARS) .5 => 83.75 [  312 ms]
   Least Angle Regression (LARS) .1 => 82.03 [  324 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   48 ms]
                     Bayesian Ridge => 86.31 [  282 ms]
                              Huber => -516.14 [  741 ms]
                             RANSAC => 82.58 [ 2000 ms]
                            Bagging => 87.09 [  893 ms]
                     Random Forests => 88.10 [  891 ms]
         Extremely Randomized Trees => 86.25 [  743 ms]
                           AdaBoost => 79.39 [  401 ms]
                  Gradient Boosting => 67.10 [  215 ms]
                K-Nearest Neighbors => 27.51 [  117 ms]
              K-Nearest Neighbors 1 => 31.00 [  116 ms]
              K-Nearest Neighbors 3 => 31.37 [  116 ms]
              K-Nearest Neighbors 5 => 27.51 [  126 ms]
              K-Nearest Neighbors 7 => 21.79 [  117 ms]
                      Decision Tree => 76.62 [  140 ms]
                    Decision Tree 3 => 70.45 [   40 ms]
                    Decision Tree 7 => 77.76 [   74 ms]
      Support Vector Machines (SVR) => 25.75 [ 1146 ms]
   Support Vector Machines (SVR) 10 => 4.30 [   63 ms]

                  Linear Regression => 85.94 [  147 ms]
                         Ridge (.5) => 85.95 [   35 ms]
                       Lasso (.005) => 86.41 [  127 ms]
                 Elastic Net (.005) => 86.43 [  144 ms]
   Least Angle Regression (LARS) 50 => 84.96 [  279 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  276 ms]
   Least Angle Regression (LARS) .5 => 83.75 [  278 ms]
   Least Angle Regression (LARS) .1 => 82.03 [  332 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   47 ms]
                     Bayesian Ridge => 86.31 [  298 ms]
                              Huber => -516.14 [  772 ms]
                           Huber 1. => -515.00 [  613 ms]
                           Huber .5 => -533.55 [  654 ms]
                           Huber .1 => -599.24 [  633 ms]
                          Huber .05 => -631.44 [  621 ms]
                          Huber .01 => -123.77 [  600 ms]
                             RANSAC => 84.48 [ 2342 ms]
                            Bagging => 87.05 [  957 ms]
                     Random Forests => 87.75 [  902 ms]
         Extremely Randomized Trees => 85.50 [  762 ms]
                           AdaBoost => 78.46 [  390 ms]
                  Gradient Boosting => 67.10 [  216 ms]
                K-Nearest Neighbors => 27.51 [  118 ms]
                      Decision Tree => 73.91 [  149 ms]
                    Decision Tree 3 => 70.45 [   63 ms]
                    Decision Tree 7 => 77.43 [  114 ms]
                   Decision Tree 11 => 74.71 [  129 ms]
                   Decision Tree 13 => 74.13 [  184 ms]
                   Decision Tree 17 => 76.03 [  153 ms]
                   Decision Tree 19 => 74.04 [  147 ms]
      Support Vector Machines (SVR) => 25.75 [ 1147 ms]
   Support Vector Machines (SVR) 10 => 4.30 [   40 ms]
/opt/anaconda3/lib/python3.6/site-packages/sklearn/svm/base.py:218: ConvergenceWarning: Solver terminated early (max_iter=10).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  % self.max_iter, ConvergenceWarning)
  Support Vector Machines (SVR) 100 => 16.52 [  271 ms]

                  Linear Regression => 85.94 [   97 ms]
                         Ridge (.5) => 85.95 [   42 ms]
                       Lasso (.005) => 86.41 [  134 ms]
                 Elastic Net (.005) => 86.43 [  144 ms]
  Least Angle Regression (LARS) 10. => 13.66 [  486 ms]
   Least Angle Regression (LARS) 5. => 39.95 [  285 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  310 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   47 ms]
                     Bayesian Ridge => 86.31 [  227 ms]
                             RANSAC => 84.92 [ 2077 ms]
                            Bagging => 86.39 [  917 ms]
                     Random Forests => 86.56 [  870 ms]
         Extremely Randomized Trees => 85.86 [  721 ms]
                        AdaBoost 10 => 80.30 [  387 ms]
                        AdaBoost 50 => 82.27 [ 1758 ms]
                       AdaBoost 100 => 82.61 [ 3381 ms]
                  Gradient Boosting => 67.10 [  219 ms]
                   Decision Tree 17 => 74.23 [  135 ms]
      Support Vector Machines (SVR) => 25.75 [ 1127 ms]
   Support Vector Machines (SVR) 10 => 4.30 [   41 ms]
/opt/anaconda3/lib/python3.6/site-packages/sklearn/svm/base.py:218: ConvergenceWarning: Solver terminated early (max_iter=10).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  % self.max_iter, ConvergenceWarning)
/opt/anaconda3/lib/python3.6/site-packages/sklearn/svm/base.py:218: ConvergenceWarning: Solver terminated early (max_iter=50).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
  % self.max_iter, ConvergenceWarning)
   Support Vector Machines (SVR) 50 => 9.03 [  161 ms]
  Support Vector Machines (SVR) 100 => 16.52 [  301 ms]

                  Linear Regression => 85.94 [   98 ms]
                         Ridge (.5) => 85.95 [   37 ms]
                       Lasso (.005) => 86.41 [  126 ms]
                 Elastic Net (.005) => 86.43 [  145 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  341 ms]
  Least Angle Regression (LARS) .75 => 85.48 [  406 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   32 ms]
                     Bayesian Ridge => 86.31 [  160 ms]
                             RANSAC => 86.04 [ 2576 ms]
                            Bagging => 86.44 [  916 ms]
                  Random Forests 10 => 86.56 [  935 ms]
      Extremely Randomized Trees 10 => 85.75 [  756 ms]
                       AdaBoost 100 => 83.27 [ 3553 ms]
                       AdaBoost 200 => 82.76 [ 6599 ms]
               Gradient Boosting 10 => 67.10 [  214 ms]
                   Decision Tree 17 => 74.93 [  134 ms]

                  Linear Regression => 85.94 [  111 ms]
                         Ridge (.5) => 85.95 [   37 ms]
                       Lasso (.005) => 86.41 [  142 ms]
                 Elastic Net (.005) => 86.43 [  228 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  331 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   85 ms]
                     Bayesian Ridge => 86.31 [  213 ms]
                             RANSAC => 85.83 [ 2566 ms]
                            Bagging => 87.50 [ 1296 ms]
                  Random Forests 10 => 87.21 [  970 ms]
                  Random Forests 50 => 88.63 [ 4436 ms]
                 Random Forests 100 => 88.70 [ 8690 ms]
      Extremely Randomized Trees 10 => 86.40 [  731 ms]
      Extremely Randomized Trees 50 => 87.05 [ 3568 ms]
     Extremely Randomized Trees 100 => 87.32 [ 7107 ms]
                       AdaBoost 100 => 83.33 [ 3398 ms]
               Gradient Boosting 10 => 67.10 [  220 ms]
               Gradient Boosting 50 => 89.07 [ 1018 ms]
              Gradient Boosting 100 => 89.74 [ 1774 ms]
                   Decision Tree 17 => 75.14 [  135 ms]

                  Linear Regression => 85.94 [   62 ms]
                         Ridge (.5) => 85.95 [   27 ms]
                       Lasso (.005) => 86.41 [   72 ms]
                 Elastic Net (.005) => 86.43 [  128 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  192 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   47 ms]
                     Bayesian Ridge => 86.31 [  134 ms]
                             RANSAC => 83.91 [ 2186 ms]
                            Bagging => 86.60 [  962 ms]
                 Random Forests 100 => 88.40 [ 8749 ms]
                 Random Forests 200 => 88.73 [17275 ms]
     Extremely Randomized Trees 100 => 86.84 [ 7057 ms]
     Extremely Randomized Trees 200 => 86.97 [14045 ms]
                       AdaBoost 100 => 82.87 [ 3398 ms]
              Gradient Boosting 100 => 89.71 [ 1838 ms]
              Gradient Boosting 200 => 89.84 [ 3551 ms]

                  Linear Regression => 85.94 [  137 ms]
                         Ridge (.5) => 85.95 [   37 ms]
                       Lasso (.005) => 86.41 [  130 ms]
                 Elastic Net (.005) => 86.43 [  144 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  389 ms]
   Least Angle Regression (LARS) .9 => 86.04 [  494 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   48 ms]
                     Bayesian Ridge => 86.31 [  262 ms]
                             RANSAC => 47.46 [ 2728 ms]
                            Bagging => 85.41 [ 1039 ms]
                 Random Forests 200 => 89.08 [17554 ms]
                 Random Forests 300 => 88.69 [27831 ms]
     Extremely Randomized Trees 200 => 87.04 [15401 ms]
     Extremely Randomized Trees 300 => 87.07 [22514 ms]
                       AdaBoost 100 => 81.68 [ 3412 ms]
              Gradient Boosting 200 => 89.74 [ 3586 ms]
              Gradient Boosting 300 => 89.87 [ 5685 ms]

                  Linear Regression => 85.94 [   66 ms]
                         Ridge (.5) => 85.95 [   53 ms]
                       Lasso (.005) => 86.41 [  128 ms]
                 Elastic Net (.005) => 86.43 [  137 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  279 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   46 ms]
                     Bayesian Ridge => 86.31 [  224 ms]
                             RANSAC => 86.89 [ 2238 ms]
                            Bagging => 86.34 [ 1012 ms]
                 Random Forests 200 => 88.72 [17619 ms]
                 Random Forests 250 => 88.61 [21992 ms]
     Extremely Randomized Trees 200 => 87.00 [14725 ms]
     Extremely Randomized Trees 250 => 87.31 [17923 ms]
                       AdaBoost 100 => 82.34 [ 3448 ms]
              Gradient Boosting 200 => 90.04 [ 3618 ms]
              Gradient Boosting 300 => 89.78 [ 5396 ms]
              Gradient Boosting 400 => 89.67 [ 7126 ms]
              Gradient Boosting 500 => 89.93 [ 8592 ms]

                  Linear Regression => 85.94 [   82 ms]
                         Ridge (.5) => 85.95 [   36 ms]
                       Lasso (.005) => 86.41 [  125 ms]
                 Elastic Net (.005) => 86.43 [  146 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  324 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   29 ms]
Orthogonal Matching Pursuit (OMP) 17 => 84.87 [   30 ms]
Orthogonal Matching Pursuit (OMP) 31 => 84.87 [   62 ms]
Orthogonal Matching Pursuit (OMP) 53 => 85.59 [   75 ms]
                     Bayesian Ridge => 86.31 [  180 ms]
                             RANSAC => 87.70 [ 2192 ms]
                            Bagging => 87.74 [  915 ms]
                 Random Forests 200 => 88.59 [18223 ms]
     Extremely Randomized Trees 250 => 87.19 [17698 ms]
                       AdaBoost 100 => 81.88 [ 3357 ms]
              Gradient Boosting 200 => 89.99 [ 3420 ms]

                  Linear Regression => 85.94 [  112 ms]
                         Ridge (.5) => 85.95 [   36 ms]
                       Lasso (.005) => 86.41 [  125 ms]
                 Elastic Net (.005) => 86.43 [  136 ms]
   Least Angle Regression (LARS) 1. => 86.20 [  310 ms]
  Orthogonal Matching Pursuit (OMP) => 80.78 [   49 ms]
Orthogonal Matching Pursuit (OMP) 10 => 82.51 [   63 ms]
Orthogonal Matching Pursuit (OMP) 25 => 84.60 [   67 ms]
Orthogonal Matching Pursuit (OMP) 50 => 85.48 [  110 ms]
Orthogonal Matching Pursuit (OMP) 75 => 85.94 [  185 ms]
/opt/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/omp.py:657: RuntimeWarning:  Orthogonal matching pursuit ended prematurely due to linear
dependence in the dictionary. The requested precision might not have been met.

  return_n_iter=True)
                     Bayesian Ridge => 86.31 [  262 ms]
                             RANSAC => 85.47 [ 2277 ms]
                            Bagging => 87.15 [  907 ms]
                 Random Forests 200 => 88.86 [17443 ms]
     Extremely Randomized Trees 250 => 86.91 [17808 ms]
                       AdaBoost 100 => 83.01 [ 3409 ms]
              Gradient Boosting 200 => 89.93 [ 3419 ms]

                       Linear Regression => 85.94 [   58 ms]
                              Ridge (.5) => 85.95 [   44 ms]
                            Lasso (.005) => 86.41 [   76 ms]
                      Elastic Net (.005) => 86.43 [  210 ms]
        Least Angle Regression (LARS) 1. => 86.20 [  265 ms]
    Orthogonal Matching Pursuit (OMP) 50 => 85.48 [   64 ms]
    Orthogonal Matching Pursuit (OMP) 72 => 85.94 [  121 ms]
                          Bayesian Ridge => 86.31 [  136 ms]
                                  RANSAC => 85.47 [ 2462 ms]
                                 Bagging => 87.75 [ 1041 ms]
                      Random Forests 200 => 88.60 [17494 ms]
          Extremely Randomized Trees 250 => 87.06 [17549 ms]
                            AdaBoost 100 => 83.20 [ 3374 ms]
                   Gradient Boosting 200 => 89.93 [ 3380 ms]

